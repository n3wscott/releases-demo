name: Release Pipeline

on:
  push:
    branches:
      - release-*

env:
  rootpath: './v2'

jobs:
  semver:
    name: Calculate Next Release
    runs-on: ubuntu-latest
    outputs:
      next: ${{ steps.ggsv.outputs.next}}
    steps:
      - name: Setup Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Install Dependencies
        run: go install tableflip.dev/ggsv@latest

      - name: Look at Ref
        id: ggsv
        run: |
          NEXT=`ggsv next-patch $GITHUB_SERVER_URL/${{ github.repository }}.git ${{ github.ref }}`
          echo "::set-output name=next::$NEXT"

  root:
    name: Release Root ${{ env.rootpath }} ${{ needs.semver.outputs.next }}
    runs-on: ubuntu-latest
    needs: semver
    env:
      corepath: 'go module path...'
    outputs:
      module: ${{ steps.go.outputs.module }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Root Module
        id: go
        run: |
          pushd ${{ env.rootpath }}
          GOMOD=`go list`
          echo "::set-output name=module::$GOMOD"

      - name: Create Release ${{ needs.semver.outputs.next }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.semver.outputs.next }}
          release_name: Release ${{ needs.semver.outputs.next }}
          prerelease: false

  first-pass:
    name: Release Sub-Module ${{ matrix.module }} ${{ needs.semver.outputs.next }}
    runs-on: ubuntu-latest
    needs:
      - semver
      - root
    strategy:
      matrix:
        module:
          - subcomponent/v2
    steps:
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Module Name
        working-directory: ${{ matrix.module }}
        run: |
          GOMOD=`go list`
          echo "::set-output name=module::$GOMOD"

      - name: Repoint Module
        working-directory: ${{ matrix.module }}
        env:
          repoint: ${{ needs.root.outputs.module }}
          tag: ${{ needs.semver.outputs.next }}
        run: |
          go get -d $repoint@$tag
          go mod edit -dropreplace $repoint

      - name: Commit Repoint
        run: |
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Repoint ${{ matrix.module }} to ${{ needs.semver.outputs.next }}."
          git push

      - name: Tag Module ${{ matrix.module }}@${{ needs.semver.outputs.next }}
        uses: actions/github-script@v5
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.semver.outputs.next }}",
              sha: context.sha
            })