name: Release Pipeline

on:
  push:
    branches:
      - release-*

env:
  rootpath: './v2'

jobs:
  semver:
    runs-on: ubuntu-latest
    outputs:
      next: ${{ steps.ggsv.outputs.next}}
    steps:
      - name: Setup Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Install Dependencies
        run: go install tableflip.dev/ggsv@latest

      - name: Look at Ref
        id: ggsv
        run: |
          NEXT=`ggsv next-patch $GITHUB_SERVER_URL/${{ github.repository }}.git ${{ github.ref }}`
          echo "::set-output name=next::$NEXT"

  root:
    runs-on: ubuntu-latest
    needs: semver
    env:
      corepath: 'go module path...'
    outputs:
      module: ${{ steps.go.outputs.module }}
    steps:
      - name: Root Module
        id: go
        run: |
          pushd ${{ env.rootpath }}
          GOMOD=`go list`
          echo "::set-output name=module::$GOMOD"

      - name: Create Release ${{ needs.semver.outputs.next }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.semver.outputs.next }}
          release_name: Release ${{ needs.semver.outputs.next }}
          prerelease: false

  first-pass:
    runs-on: ubuntu-latest
    needs: root
    strategy:
      matrix:
        module:
          - subcomponent/v2
    steps:
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Repoint Module
        env:
          repoint: ${{ needs.root.outputs.module }}
          tag: ${{ needs.semver.outputs.next }}
        run: |
          pushd ${{ matrix.module }}
          cat go.mod
          go mod edit -dropreplace $repoint
          go get -d $repoint@$tag
          cat go.mod

#      - name: Tag Release ${{ needs.semver.outputs.next }}
#        uses: actions/github-script@v5
#        with:
#          script: |
#            github.git.createRef({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              ref: "refs/tags/${{ needs.semver.outputs.next }}",
#              sha: context.sha
#            })